{"ast":null,"code":"// import { push } from 'connected-react-router';\n// import React, { useCallback, useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux';\n// import { PrimaryButton, SelectBox, TextInput, ImageArea } from '../components/Uikit';\n// import { saveMenu } from '../reducks/menus/operations';\n// import { db } from '../firebase/index';\n// const MenuEdit = () => {\n//   const dispatch = useDispatch();\n//   let id = window.location.pathname.split('/menu/edit')[1];\n//   let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/edit')[0];\n//   if(id !== \"\") {\n//     id = id.split('/')[1]\n//   };\n//   const [name, setName] = useState(\"\"),\n//         [price, setPrice] = useState(\"\"),\n//         [images, setImages] = useState([]),\n//         [star, setStar] = useState(\"\");\n//   const inputName = useCallback((event) => {\n//     setName(event.target.value)\n//   }, [setName]);\n//   const inputPrice = useCallback((event) => {\n//     setPrice(event.target.value)\n//   }, [setPrice]);\n//   const stars = [\n//     {id: \"1\", name: \"★\"},\n//     {id: \"2\", name: \"★★\"},\n//     {id: \"3\", name: \"★★★\"},\n//     {id: \"4\", name: \"★★★★\"},\n//     {id: \"5\", name: \"★★★★★\"}\n//   ]\n//   useEffect(() => {\n//     if(id !== \"\") {\n//       db.collection('menus').doc(id).get()\n//         .then(snapshot => {\n//           const data = snapshot.data();\n//           setName(data.menu);\n//           setPrice(data.price);\n//           setImages(data.images);\n//           setStar(data.star);\n//         })\n//     }\n//   }, [id])\n//   return (\n//     <section>\n//       <div className='module-spacer--small' />\n//       <h2 className='u-text__headline u-text-center'>投稿・編集</h2>\n//       <div className='c-section-container'>\n//         <ImageArea images={images} setImages={setImages} />\n//         <TextInput\n//           fullWidth={true} label={\"メニュー名\"} multiline={false} required={true}\n//           onChange={inputName} rows={1} value={name} type={\"text\"}\n//         />\n//         <TextInput\n//           fullWidth={true} label={\"価格\"} multiline={false} required={true}\n//           onChange={inputPrice} rows={1} value={price} type={\"number\"}\n//         />\n//         <SelectBox\n//           label={\"評価\"} required={true} options={stars} select={setStar} value={star}\n//         />\n//         <div className='module-spacer--medium' />\n//         <div className=\"center\">\n//           <PrimaryButton\n//             label={\"保存\"}\n//             onClick={() => dispatch(saveMenu(restId, id, name, price, star, images))}\n//           />\n//         </div>\n//         <p className=\"center\" onClick={() => dispatch(push('/restaurant/'+ restId + '/menu/'))}>一覧へ戻る</p>\n//       </div>\n//     </section>\n//   )\n// }\n// export default MenuEdit","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/templates/MenuEdit.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { push } from 'connected-react-router';\r\n// import React, { useCallback, useEffect, useState } from 'react'\r\n// import { useDispatch } from 'react-redux';\r\n// import { PrimaryButton, SelectBox, TextInput, ImageArea } from '../components/Uikit';\r\n// import { saveMenu } from '../reducks/menus/operations';\r\n// import { db } from '../firebase/index';\r\n\r\n// const MenuEdit = () => {\r\n//   const dispatch = useDispatch();\r\n//   let id = window.location.pathname.split('/menu/edit')[1];\r\n//   let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/edit')[0];\r\n\r\n//   if(id !== \"\") {\r\n//     id = id.split('/')[1]\r\n//   };\r\n\r\n//   const [name, setName] = useState(\"\"),\r\n//         [price, setPrice] = useState(\"\"),\r\n//         [images, setImages] = useState([]),\r\n//         [star, setStar] = useState(\"\");\r\n\r\n//   const inputName = useCallback((event) => {\r\n//     setName(event.target.value)\r\n//   }, [setName]);\r\n\r\n//   const inputPrice = useCallback((event) => {\r\n//     setPrice(event.target.value)\r\n//   }, [setPrice]);\r\n\r\n//   const stars = [\r\n//     {id: \"1\", name: \"★\"},\r\n//     {id: \"2\", name: \"★★\"},\r\n//     {id: \"3\", name: \"★★★\"},\r\n//     {id: \"4\", name: \"★★★★\"},\r\n//     {id: \"5\", name: \"★★★★★\"}\r\n//   ]\r\n\r\n//   useEffect(() => {\r\n//     if(id !== \"\") {\r\n//       db.collection('menus').doc(id).get()\r\n//         .then(snapshot => {\r\n//           const data = snapshot.data();\r\n//           setName(data.menu);\r\n//           setPrice(data.price);\r\n//           setImages(data.images);\r\n//           setStar(data.star);\r\n//         })\r\n//     }\r\n//   }, [id])\r\n\r\n//   return (\r\n//     <section>\r\n//       <div className='module-spacer--small' />\r\n//       <h2 className='u-text__headline u-text-center'>投稿・編集</h2>\r\n//       <div className='c-section-container'>\r\n//         <ImageArea images={images} setImages={setImages} />\r\n//         <TextInput\r\n//           fullWidth={true} label={\"メニュー名\"} multiline={false} required={true}\r\n//           onChange={inputName} rows={1} value={name} type={\"text\"}\r\n//         />\r\n//         <TextInput\r\n//           fullWidth={true} label={\"価格\"} multiline={false} required={true}\r\n//           onChange={inputPrice} rows={1} value={price} type={\"number\"}\r\n//         />\r\n//         <SelectBox\r\n//           label={\"評価\"} required={true} options={stars} select={setStar} value={star}\r\n//         />\r\n//         <div className='module-spacer--medium' />\r\n//         <div className=\"center\">\r\n//           <PrimaryButton\r\n//             label={\"保存\"}\r\n//             onClick={() => dispatch(saveMenu(restId, id, name, price, star, images))}\r\n//           />\r\n//         </div>\r\n//         <p className=\"center\" onClick={() => dispatch(push('/restaurant/'+ restId + '/menu/'))}>一覧へ戻る</p>\r\n//       </div>\r\n//     </section>\r\n//   )\r\n// }\r\n\r\n// export default MenuEdit\r\n"]},"metadata":{},"sourceType":"module"}