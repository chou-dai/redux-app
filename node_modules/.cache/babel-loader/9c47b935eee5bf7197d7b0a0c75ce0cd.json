{"ast":null,"code":"import { push } from \"connected-react-router\";\nimport { signInAction } from \"./actions\";\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\";\nexport const listenAuthState = () => {\n  return async dispatch => {\n    return auth.onAuthStateChanged(user => {\n      if (user) {} else {\n        dispatch(push('/signin'));\n      }\n    });\n  };\n};\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert('必須項目が未入力です。');\n      return false;\n    }\n\n    auth.signInWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        db.collection('users').doc(uid).get().then(snapshot => {\n          const data = snapshot.data();\n          dispatch(signInAction({\n            isSignedIn: true,\n            role: data.role,\n            uid: uid,\n            username: data.username\n          }));\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert('必須項目が未入力です。');\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert('パスワードが一致しません。もう1度お試しください。');\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const timestamp = FirebaseTimestamp.now();\n        const userInitialData = {\n          created_at: timestamp,\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          update_at: timestamp,\n          username: username\n        };\n        db.collection('users').doc(uid).set(userInitialData).then(() => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/reducks/users/operations.js"],"names":["push","signInAction","auth","db","FirebaseTimestamp","listenAuthState","dispatch","onAuthStateChanged","user","signIn","email","password","alert","signInWithEmailAndPassword","then","result","uid","collection","doc","get","snapshot","data","isSignedIn","role","username","signUp","confirmPassword","createUserWithEmailAndPassword","timestamp","now","userInitialData","created_at","update_at","set"],"mappings":"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","sourcesContent":["import { push } from \"connected-react-router\";\r\nimport { signInAction } from \"./actions\";\r\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\"\r\n\r\nexport const listenAuthState = () => {\r\n  return async(dispatch) => {\r\n    return auth.onAuthStateChanged(user => {\r\n      if(user) {\r\n\r\n      } else {\r\n        dispatch(push('/signin'))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return async(dispatch) => {\r\n    if(email === \"\" || password === \"\") {\r\n      alert('必須項目が未入力です。');\r\n      return false\r\n    }\r\n\r\n    auth.signInWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        const user = result.user\r\n\r\n        if(user) {\r\n          const uid = user.uid\r\n\r\n          db.collection('users').doc(uid).get()\r\n            .then(snapshot => {\r\n              const data = snapshot.data()\r\n\r\n              dispatch(signInAction({\r\n                isSignedIn: true,\r\n                role: data.role,\r\n                uid: uid,\r\n                username: data.username\r\n              }))\r\n\r\n              dispatch(push('/'))\r\n            })\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const signUp = (username, email, password, confirmPassword) => {\r\n  return async(dispatch) => {\r\n    if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert('必須項目が未入力です。');\r\n      return false\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert('パスワードが一致しません。もう1度お試しください。')\r\n      return false\r\n    }\r\n\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        const user = result.user;\r\n\r\n        if(user) {\r\n          const uid = user.uid;\r\n          const timestamp = FirebaseTimestamp.now();\r\n\r\n          const userInitialData = {\r\n            created_at: timestamp,\r\n            email: email,\r\n            role: \"customer\",\r\n            uid: uid,\r\n            update_at: timestamp,\r\n            username: username\r\n          };\r\n\r\n          db.collection('users').doc(uid).set(userInitialData)\r\n            .then(() => {\r\n              dispatch(push('/'))\r\n            })\r\n        }\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}