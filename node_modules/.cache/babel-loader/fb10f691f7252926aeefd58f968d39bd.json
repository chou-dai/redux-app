{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\templates\\\\MenuEdit.js\",\n    _s = $RefreshSig$();\n\nimport { push } from 'connected-react-router';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryButton, TextInput, ImageArea } from '../components/Uikit';\nimport { saveMenu } from '../reducks/menus/operations';\nimport { db } from '../firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let id = window.location.pathname.split('/menu/edit')[1];\n  let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/edit')[0];\n\n  if (id !== \"\") {\n    id = id.split('/')[1];\n  }\n\n  ;\n  const [name, setName] = useState(\"\"),\n        [price, setPrice] = useState(\"\"),\n        [images, setImages] = useState([]);\n  const inputName = useCallback(event => {\n    setName(event.target.value);\n  }, [setName]);\n  const inputPrice = useCallback(event => {\n    setPrice(event.target.value);\n  }, [setPrice]);\n  useEffect(() => {\n    if (id !== \"\") {\n      db.collection('restaurants').doc(restId).collection('menus').doc(id).get().then(snapshot => {\n        const data = snapshot.data();\n        setName(data.name);\n        setPrice(data.price);\n        setImages(data.images);\n      });\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text__headline u-text-center\",\n      children: \"\\u6295\\u7A3F\\u30FB\\u7DE8\\u96C6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-section-container\",\n      children: [/*#__PURE__*/_jsxDEV(ImageArea, {\n        images: images,\n        setImages: setImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        fullWidth: true,\n        label: \"メニュー名\",\n        multiline: false,\n        required: true,\n        onChange: inputName,\n        rows: 1,\n        value: name,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        fullWidth: true,\n        label: \"価格\",\n        multiline: false,\n        required: true,\n        onChange: inputPrice,\n        rows: 1,\n        value: price,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"module-spacer--medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          label: \"保存\",\n          onClick: () => dispatch(saveMenu(restId, id, name, price, images))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        onClick: () => dispatch(push('/restaurant/' + restId + '/menu/')),\n        children: \"\\u4E00\\u89A7\\u3078\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuEdit, \"IdWM6pCCEQub/ITuD8Zrwmw783s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MenuEdit;\nexport default MenuEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuEdit\");","map":{"version":3,"sources":["C:/Users/c.daiki/desktop/react/redux/redux-app/src/templates/MenuEdit.js"],"names":["push","React","useCallback","useEffect","useState","useDispatch","PrimaryButton","TextInput","ImageArea","saveMenu","db","MenuEdit","dispatch","id","window","location","pathname","split","restId","name","setName","price","setPrice","images","setImages","inputName","event","target","value","inputPrice","collection","doc","get","then","snapshot","data"],"mappings":"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","sourcesContent":["import { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { PrimaryButton, TextInput, ImageArea } from '../components/Uikit';\r\nimport { saveMenu } from '../reducks/menus/operations';\r\nimport { db } from '../firebase/index';\r\n\r\nconst MenuEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let id = window.location.pathname.split('/menu/edit')[1];\r\n  let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/edit')[0];\r\n\r\n  if(id !== \"\") {\r\n    id = id.split('/')[1]\r\n  };\r\n\r\n  const [name, setName] = useState(\"\"),\r\n        [price, setPrice] = useState(\"\"),\r\n        [images, setImages] = useState([]);\r\n\r\n  const inputName = useCallback((event) => {\r\n    setName(event.target.value)\r\n  }, [setName]);\r\n\r\n  const inputPrice = useCallback((event) => {\r\n    setPrice(event.target.value)\r\n  }, [setPrice]);\r\n\r\n  useEffect(() => {\r\n    if(id !== \"\") {\r\n      db.collection('restaurants').doc(restId).collection('menus').doc(id).get()\r\n        .then(snapshot => {\r\n          const data = snapshot.data();\r\n          setName(data.name);\r\n          setPrice(data.price);\r\n          setImages(data.images);\r\n        })\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <section>\r\n      <div className='module-spacer--small' />\r\n      <h2 className='u-text__headline u-text-center'>投稿・編集</h2>\r\n      <div className='c-section-container'>\r\n        <ImageArea images={images} setImages={setImages} />\r\n        <TextInput\r\n          fullWidth={true} label={\"メニュー名\"} multiline={false} required={true}\r\n          onChange={inputName} rows={1} value={name} type={\"text\"}\r\n        />\r\n        <TextInput\r\n          fullWidth={true} label={\"価格\"} multiline={false} required={true}\r\n          onChange={inputPrice} rows={1} value={price} type={\"number\"}\r\n        />\r\n        <div className='module-spacer--medium' />\r\n        <div className=\"center\">\r\n          <PrimaryButton\r\n            label={\"保存\"}\r\n            onClick={() => dispatch(saveMenu(restId, id, name, price, images))}\r\n          />\r\n        </div>\r\n        <p className=\"center\" onClick={() => dispatch(push('/restaurant/'+ restId + '/menu/'))}>一覧へ戻る</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default MenuEdit\r\n"]},"metadata":{},"sourceType":"module"}