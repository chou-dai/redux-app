{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\components\\\\Menus\\\\ImageArea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { storage } from \"../../firebase/index\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { useDispatch } from \"react-redux\";\nimport { showLoadingAction, hideLoadingAction } from \"../../reducks/loading/actions\";\nimport { ImagePreview } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  icon: {\n    marginRight: 8,\n    height: 48,\n    width: 48\n  }\n});\n\nconst ImageArea = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const images = props.images;\n  const deleteImage = useCallback(async id => {\n    const ret = window.confirm('この画像を削除しますか？');\n\n    if (!ret) {\n      return false;\n    } else {\n      const newImages = images.filter(image => image.id !== id);\n      props.setImages(newImages);\n      return storage.ref('images').child(id).delete();\n    }\n  }, [images]);\n  const uploadImage = useCallback(event => {\n    dispatch(showLoadingAction(\"uploading...\"));\n    const file = event.target.files;\n    let blob = new Blob(file, {\n      type: \"image/jpeg\"\n    }); // Generate random 16 digits strings\n\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join('');\n    const uploadRef = storage.ref('images').child(fileName);\n    const uploadTask = uploadRef.put(blob);\n    uploadTask.then(() => {\n      // Handle successful uploads on complete\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const newImage = {\n          id: fileName,\n          path: downloadURL\n        };\n        props.setImages(prevState => [...prevState, newImage]);\n        dispatch(hideLoadingAction());\n      });\n    }).catch(() => {\n      dispatch(hideLoadingAction());\n    });\n  }, [props.setImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid__list-images\",\n      children: images.length > 0 && images.map(image => /*#__PURE__*/_jsxDEV(ImagePreview, {\n        delete: deleteImage,\n        id: image.id,\n        path: image.path\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"u-text-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.icon,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"u-display-none\",\n            type: \"file\",\n            id: \"image\",\n            onChange: e => uploadImage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageArea, \"2wGRdtAF0obC8xK6jw8yupVgPm0=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = ImageArea;\nexport default ImageArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageArea\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/components/Menus/ImageArea.js"],"names":["React","useCallback","storage","makeStyles","IconButton","AddPhotoAlternateIcon","useDispatch","showLoadingAction","hideLoadingAction","ImagePreview","useStyles","icon","marginRight","height","width","ImageArea","props","classes","dispatch","images","deleteImage","id","ret","window","confirm","newImages","filter","image","setImages","ref","child","delete","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","path","prevState","catch","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,+BAAnD;AACA,SAAQC,YAAR,QAA2B,SAA3B;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AACzBQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,CADX;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,KAAK,EAAE;AAHL;AADmB,CAAD,CAA5B;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,MAAM,GAAGH,KAAK,CAACG,MAArB;AAEA,QAAMC,WAAW,GAAGnB,WAAW,CAAC,MAAOoB,EAAP,IAAc;AAC1C,UAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAe,cAAf,CAAZ;;AACA,QAAI,CAACF,GAAL,EAAU;AACN,aAAO,KAAP;AACH,KAFD,MAEO;AACH,YAAMG,SAAS,GAAGN,MAAM,CAACO,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACN,EAAN,KAAaA,EAApC,CAAlB;AACAL,MAAAA,KAAK,CAACY,SAAN,CAAgBH,SAAhB;AACA,aAAOvB,OAAO,CAAC2B,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BT,EAA5B,EAAgCU,MAAhC,EAAP;AACH;AACJ,GAT8B,EAS5B,CAACZ,MAAD,CAT4B,CAA/B;AAWA,QAAMa,WAAW,GAAG/B,WAAW,CAAEgC,KAAD,IAAW;AACvCf,IAAAA,QAAQ,CAACX,iBAAiB,CAAC,cAAD,CAAlB,CAAR;AACA,UAAM2B,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAe;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAX,CAHuC,CAKvC;;AACA,UAAMC,CAAC,GAAC,gEAAR;AACA,UAAMC,CAAC,GAAC,EAAR;AACA,UAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,eAAP,CAAuB,IAAIC,WAAJ,CAAgBN,CAAhB,CAAvB,CAAX,EAAuDO,GAAvD,CAA4DC,CAAD,IAAKT,CAAC,CAACS,CAAC,GAACT,CAAC,CAACU,MAAL,CAAjE,EAA+EC,IAA/E,CAAoF,EAApF,CAAjB;AAEA,UAAMC,SAAS,GAAGlD,OAAO,CAAC2B,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BY,QAA5B,CAAlB;AACA,UAAMW,UAAU,GAAGD,SAAS,CAACE,GAAV,CAAcjB,IAAd,CAAnB;AAEAgB,IAAAA,UAAU,CAACE,IAAX,CAAgB,MAAM;AAClB;AACAF,MAAAA,UAAU,CAACG,QAAX,CAAoB3B,GAApB,CAAwB4B,cAAxB,GAAyCF,IAAzC,CAA+CG,WAAD,IAAiB;AAC3D,cAAMC,QAAQ,GAAG;AAACtC,UAAAA,EAAE,EAAEqB,QAAL;AAAekB,UAAAA,IAAI,EAAEF;AAArB,SAAjB;AACA1C,QAAAA,KAAK,CAACY,SAAN,CAAiBiC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,QAAf,CAA9B;AACAzC,QAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACH,OAJD;AAKH,KAPD,EAOGsD,KAPH,CAOS,MAAM;AACX5C,MAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACH,KATD;AAUH,GAvB8B,EAuB5B,CAACQ,KAAK,CAACY,SAAP,CAvB4B,CAA/B;AAyBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACKT,MAAM,CAAC+B,MAAP,GAAgB,CAAhB,IACG/B,MAAM,CAAC6B,GAAP,CAAWrB,KAAK,iBAAI,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEP,WAAtB;AAAmC,QAAA,EAAE,EAAEO,KAAK,CAACN,EAA7C;AAAiD,QAAA,IAAI,EAAEM,KAAK,CAACiC;AAA7D,SAAwEjC,KAAK,CAACN,EAA9E;AAAA;AAAA;AAAA;AAAA,cAApB;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEJ,OAAO,CAACN,IAA/B;AAAA,+BACI;AAAA,kCACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,gBAAjB;AAAkC,YAAA,IAAI,EAAC,MAAvC;AAA8C,YAAA,EAAE,EAAC,OAAjD;AAAyD,YAAA,QAAQ,EAAEoD,CAAC,IAAI/B,WAAW,CAAC+B,CAAD;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3DD;;GAAMhD,S;UACcL,S,EACCJ,W;;;KAFfS,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, {useCallback} from 'react';\r\nimport {storage} from \"../../firebase/index\"\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {showLoadingAction, hideLoadingAction} from \"../../reducks/loading/actions\";\r\nimport {ImagePreview} from \"./index\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 48\r\n    }\r\n})\r\n\r\nconst ImageArea = (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const images = props.images;\r\n\r\n    const deleteImage = useCallback(async (id) => {\r\n        const ret = window.confirm('この画像を削除しますか？')\r\n        if (!ret) {\r\n            return false\r\n        } else {\r\n            const newImages = images.filter(image => image.id !== id)\r\n            props.setImages(newImages);\r\n            return storage.ref('images').child(id).delete()\r\n        }\r\n    }, [images])\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        dispatch(showLoadingAction(\"uploading...\"))\r\n        const file = event.target.files;\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                const newImage = {id: fileName, path: downloadURL};\r\n                props.setImages((prevState => [...prevState, newImage]))\r\n                dispatch(hideLoadingAction())\r\n            });\r\n        }).catch(() => {\r\n            dispatch(hideLoadingAction())\r\n        });\r\n    }, [props.setImages])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-grid__list-images\">\r\n                {images.length > 0 && (\r\n                    images.map(image => <ImagePreview delete={deleteImage} id={image.id} path={image.path} key={image.id} /> )\r\n                )}\r\n            </div>\r\n            <div className=\"u-text-right\">\r\n                <span>商品画像を登録する</span>\r\n                <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\" type=\"file\" id=\"image\" onChange={e => uploadImage(e)}/>\r\n                    </label>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageArea"]},"metadata":{},"sourceType":"module"}