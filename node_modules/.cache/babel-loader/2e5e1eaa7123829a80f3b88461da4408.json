{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\templates\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryButton, TextInput } from '../components/Uikit';\nimport { signUp } from '../reducks/users/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\"),\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [confirmPassword, setConfirmPassword] = useState(\"\");\n  const inputUsername = useCallback(event => {\n    setUsername(event.target.value);\n  }, [setUsername]);\n  const inputEmail = useCallback(event => {\n    setEmail(event.target.value);\n  }, [setEmail]);\n  const inputPassword = useCallback(event => {\n    setPassword(event.target.value);\n  }, [setPassword]);\n  const inputConfirmPassword = useCallback(event => {\n    setConfirmPassword(event.target.value);\n  }, [setConfirmPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text__headline u-text-center\",\n      children: \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: true,\n      label: \"メールアドレス\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: email,\n      type: \"email\",\n      onChange: inputEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: true,\n      label: \"パスワード\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: password,\n      type: \"password\",\n      onChange: inputPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        label: \"Sign In\",\n        onClick: () => dispatch(signUp(username, email, password, confirmPassword))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"4fR85PbeOIfrADpLCF1kG4kZ4m0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/templates/SignIn.js"],"names":["React","useCallback","useState","useDispatch","PrimaryButton","TextInput","signUp","SignIn","dispatch","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","inputUsername","event","target","value","inputEmail","inputPassword","inputConfirmPassword"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PrimaryButton, TextInput } from '../components/Uikit';\r\nimport { signUp } from '../reducks/users/operations';\r\n\r\nconst SignIn = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState(\"\"),\r\n        [email, setEmail] = useState(\"\"),\r\n        [password, setPassword] = useState(\"\"),\r\n        [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const inputUsername = useCallback((event) => {\r\n    setUsername(event.target.value)\r\n  }, [setUsername])\r\n\r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.target.value)\r\n  }, [setEmail])\r\n\r\n  const inputPassword = useCallback((event) => {\r\n    setPassword(event.target.value)\r\n  }, [setPassword])\r\n\r\n  const inputConfirmPassword = useCallback((event) => {\r\n    setConfirmPassword(event.target.value)\r\n  }, [setConfirmPassword])\r\n\r\n  return (\r\n    <div className='c-section-container'>\r\n      <h2 className='u-text__headline u-text-center'>サインイン</h2>\r\n      <div className='module-spacer--medium' />\r\n      <TextInput\r\n        fullWidth={true} label={\"メールアドレス\"} multiline={false} required={true}\r\n        rows={1} value={email} type={\"email\"} onChange={inputEmail}\r\n      />\r\n      <TextInput\r\n        fullWidth={true} label={\"パスワード\"} multiline={false} required={true}\r\n        rows={1} value={password} type={\"password\"} onChange={inputPassword}\r\n      />\r\n      <div className='module-spacer--medium' />\r\n      <div className='center'>\r\n        <PrimaryButton\r\n          label={\"Sign In\"}\r\n          onClick={() => dispatch(signUp(username, email, password, confirmPassword))}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n"]},"metadata":{},"sourceType":"module"}