{"ast":null,"code":"import { push } from 'connected-react-router';\nimport { db, FirebaseTimestamp } from '../../firebase';\nimport { fetchMenusAction } from './actions';\nconst menusRef = db.collection('menus');\nexport const fetchMenus = () => {\n  return async dispatch => {\n    menusRef.orderBy('updated_at', 'desc').get().then(snapshots => {\n      const menuList = [];\n      snapshots.forEach(snapshot => {\n        const menu = snapshot.data();\n        menuList.push(menu);\n      });\n      dispatch(fetchMenusAction(menuList));\n    });\n  };\n};\nexport const saveMenue = (id, menu, price, star, images) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    console.log(\"------------------------\", id);\n    const data = {\n      menu: menu,\n      price: parseInt(price, 10),\n      star: star,\n      images: images,\n      updated_at: timestamp\n    };\n\n    if (id === \"\") {\n      console.log(\"------------------------\", id);\n      const ref = menusRef.doc();\n      const id = ref.id;\n      data.id = id;\n      data.create_at = timestamp;\n    }\n\n    return menusRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push('/'));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/reducks/menus/operations.js"],"names":["push","db","FirebaseTimestamp","fetchMenusAction","menusRef","collection","fetchMenus","dispatch","orderBy","get","then","snapshots","menuList","forEach","snapshot","menu","data","saveMenue","id","price","star","images","timestamp","now","console","log","parseInt","updated_at","ref","doc","create_at","set","merge","catch","error","Error"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,EAAT,EAAaC,iBAAb,QAAsC,gBAAtC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,MAAMC,QAAQ,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,CAAjB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAMC,QAAN,IAAmB;AACxBH,IAAAA,QAAQ,CAACI,OAAT,CAAiB,YAAjB,EAA+B,MAA/B,EAAuCC,GAAvC,GACGC,IADH,CACQC,SAAS,IAAI;AACjB,YAAMC,QAAQ,GAAG,EAAjB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC5B,cAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,EAAb;AACAJ,QAAAA,QAAQ,CAACZ,IAAT,CAAce,IAAd;AACD,OAHD;AAIAR,MAAAA,QAAQ,CAACJ,gBAAgB,CAACS,QAAD,CAAjB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMK,SAAS,GAAG,CAACC,EAAD,EAAKH,IAAL,EAAWI,KAAX,EAAkBC,IAAlB,EAAwBC,MAAxB,KAAmC;AAC1D,SAAO,MAAMd,QAAN,IAAmB;AACxB,UAAMe,SAAS,GAAGpB,iBAAiB,CAACqB,GAAlB,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCP,EAAxC;AAEA,UAAMF,IAAI,GAAG;AACXD,MAAAA,IAAI,EAAEA,IADK;AAEXI,MAAAA,KAAK,EAAEO,QAAQ,CAACP,KAAD,EAAQ,EAAR,CAFJ;AAGXC,MAAAA,IAAI,EAAEA,IAHK;AAIXC,MAAAA,MAAM,EAAEA,MAJG;AAKXM,MAAAA,UAAU,EAAEL;AALD,KAAb;;AAQA,QAAIJ,EAAE,KAAK,EAAX,EAAe;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCP,EAAxC;AAEA,YAAMU,GAAG,GAAGxB,QAAQ,CAACyB,GAAT,EAAZ;AACA,YAAMX,EAAE,GAAGU,GAAG,CAACV,EAAf;AACAF,MAAAA,IAAI,CAACE,EAAL,GAAUA,EAAV;AACAF,MAAAA,IAAI,CAACc,SAAL,GAAiBR,SAAjB;AACD;;AAED,WAAOlB,QAAQ,CAACyB,GAAT,CAAaX,EAAb,EAAiBa,GAAjB,CAAqBf,IAArB,EAA2B;AAACgB,MAAAA,KAAK,EAAE;AAAR,KAA3B,EACJtB,IADI,CACC,MAAM;AACVH,MAAAA,QAAQ,CAACP,IAAI,CAAC,GAAD,CAAL,CAAR;AACD,KAHI,EAGFiC,KAHE,CAGKC,KAAD,IAAW;AAClB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,KALI,CAAP;AAMD,GA3BD;AA4BD,CA7BM","sourcesContent":["import { push } from 'connected-react-router';\r\nimport { db, FirebaseTimestamp } from '../../firebase';\r\nimport { fetchMenusAction } from './actions';\r\n\r\nconst menusRef = db.collection('menus');\r\n\r\nexport const fetchMenus = () => {\r\n  return async(dispatch) => {\r\n    menusRef.orderBy('updated_at', 'desc').get()\r\n      .then(snapshots => {\r\n        const menuList = []\r\n        snapshots.forEach(snapshot => {\r\n          const menu = snapshot.data()\r\n          menuList.push(menu)\r\n        })\r\n        dispatch(fetchMenusAction(menuList))\r\n      })\r\n  }\r\n}\r\n\r\nexport const saveMenue = (id, menu, price, star, images) => {\r\n  return async(dispatch) => {\r\n    const timestamp = FirebaseTimestamp.now()\r\n    console.log(\"------------------------\", id)\r\n\r\n    const data = {\r\n      menu: menu,\r\n      price: parseInt(price, 10),\r\n      star: star,\r\n      images: images,\r\n      updated_at: timestamp\r\n    }\r\n    \r\n    if (id === \"\") {\r\n      console.log(\"------------------------\", id)\r\n\r\n      const ref = menusRef.doc()\r\n      const id = ref.id;\r\n      data.id = id\r\n      data.create_at = timestamp\r\n    }\r\n\r\n    return menusRef.doc(id).set(data, {merge: true})\r\n      .then(() => {\r\n        dispatch(push('/'))\r\n      }).catch((error) => {\r\n        throw new Error(error)\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}