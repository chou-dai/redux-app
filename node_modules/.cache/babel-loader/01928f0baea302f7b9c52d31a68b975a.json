{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\templates\\\\ReviewEdit.js\",\n    _s = $RefreshSig$();\n\nimport { push } from 'connected-react-router';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryButton, SelectBox, TextInput, ImageArea } from '../components/Uikit';\nimport { saveMenu } from '../reducks/menus/operations';\nimport { db } from '../firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/')[0];\n  let menuId = window.location.pathname.split('/menu/')[1].split('/review/edit')[0];\n  let id = window.location.pathname.split('/review/edit')[1];\n  console.log(restId);\n  console.log(menuId);\n  console.log(id);\n\n  if (id !== \"\") {\n    id = id.split('/')[1];\n  }\n\n  ;\n  const [images, setImages] = useState([]),\n        [star, setStar] = useState(\"\"),\n        [text, setText] = useState(\"\");\n  const inputText = useCallback(event => {\n    setText(event.target.value);\n  }, [setText]);\n  const stars = [{\n    id: \"1\",\n    name: \"★\"\n  }, {\n    id: \"2\",\n    name: \"★★\"\n  }, {\n    id: \"3\",\n    name: \"★★★\"\n  }, {\n    id: \"4\",\n    name: \"★★★★\"\n  }, {\n    id: \"5\",\n    name: \"★★★★★\"\n  }];\n  useEffect(() => {\n    if (id !== \"\") {\n      db.collection('restaurants').doc(restId).collection('menus').doc(id).get().then(snapshot => {\n        const data = snapshot.data();\n      });\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text__headline u-text-center\",\n      children: \"\\u6295\\u7A3F\\u30FB\\u7DE8\\u96C6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-section-container\",\n      children: [/*#__PURE__*/_jsxDEV(ImageArea, {\n        images: images,\n        setImages: setImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n        label: \"評価\",\n        required: true,\n        options: stars,\n        select: setStar,\n        value: star\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        fullWidth: true,\n        label: \"メニュー名\",\n        multiline: true,\n        required: true,\n        onChange: inputText,\n        rows: 3,\n        value: text,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"module-spacer--medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          label: \"保存\",\n          onClick: () => dispatch(saveMenu(restId, id, star, images, text))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        onClick: () => dispatch(push('/restaurant/' + restId + '/menu/')),\n        children: \"\\u4E00\\u89A7\\u3078\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReviewEdit, \"BzNN/zcpDS5at/4hmPGRhdutSdg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ReviewEdit;\nexport default ReviewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewEdit\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/templates/ReviewEdit.js"],"names":["push","React","useCallback","useEffect","useState","useDispatch","PrimaryButton","SelectBox","TextInput","ImageArea","saveMenu","db","ReviewEdit","dispatch","restId","window","location","pathname","split","menuId","id","console","log","images","setImages","star","setStar","text","setText","inputText","event","target","value","stars","name","collection","doc","get","then","snapshot","data"],"mappings":"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","sourcesContent":["import { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { PrimaryButton, SelectBox, TextInput, ImageArea } from '../components/Uikit';\r\nimport { saveMenu } from '../reducks/menus/operations';\r\nimport { db } from '../firebase/index';\r\n\r\nconst ReviewEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let restId = window.location.pathname.split('/restaurant/')[1].split('/menu/')[0];\r\n  let menuId = window.location.pathname.split('/menu/')[1].split('/review/edit')[0];\r\n  let id = window.location.pathname.split('/review/edit')[1];\r\n  \r\n  console.log(restId);\r\n  console.log(menuId);\r\n  console.log(id);\r\n\r\n  if(id !== \"\") {\r\n    id = id.split('/')[1]\r\n  };\r\n\r\n  const [images, setImages] = useState([]),\r\n        [star, setStar] = useState(\"\"),\r\n        [text, setText] = useState(\"\");\r\n\r\n  const inputText = useCallback((event) => {\r\n    setText(event.target.value)\r\n  }, [setText]);\r\n\r\n  const stars = [\r\n    {id: \"1\", name: \"★\"},\r\n    {id: \"2\", name: \"★★\"},\r\n    {id: \"3\", name: \"★★★\"},\r\n    {id: \"4\", name: \"★★★★\"},\r\n    {id: \"5\", name: \"★★★★★\"}\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if(id !== \"\") {\r\n      db.collection('restaurants').doc(restId).collection('menus').doc(id).get()\r\n        .then(snapshot => {\r\n          const data = snapshot.data();\r\n        })\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <section>\r\n      <div className='module-spacer--small' />\r\n      <h2 className='u-text__headline u-text-center'>投稿・編集</h2>\r\n      <div className='c-section-container'>\r\n        <ImageArea images={images} setImages={setImages} />\r\n        <SelectBox\r\n          label={\"評価\"} required={true} options={stars} select={setStar} value={star}\r\n        />\r\n        <TextInput\r\n          fullWidth={true} label={\"メニュー名\"} multiline={true} required={true}\r\n          onChange={inputText} rows={3} value={text} type={\"text\"}\r\n        />\r\n        <div className='module-spacer--medium' />\r\n        <div className=\"center\">\r\n          <PrimaryButton\r\n            label={\"保存\"}\r\n            onClick={() => dispatch(saveMenu(restId, id, star, images, text))}\r\n          />\r\n        </div>\r\n        <p className=\"center\" onClick={() => dispatch(push('/restaurant/'+ restId + '/menu/'))}>一覧へ戻る</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ReviewEdit\r\n"]},"metadata":{},"sourceType":"module"}