{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\templates\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { TextInput } from '../components/Uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\"),\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [confirmPassword, setConfirmPassword] = useState(\"\");\n  const inputUsername = useCallback(event => {\n    setUsername(event.targe.value);\n  }, [setUsername]);\n  const inputEmail = useCallback(event => {\n    setEmail(event.targe.value);\n  }, [setEmail]);\n  const inputPassword = useCallback(event => {\n    setPassword(event.targe.value);\n  }, [setPassword]);\n  const inputConfirmPassword = useCallback(event => {\n    setConfirmPassword(event.targe.value);\n  }, [setConfirmPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text-headline u-text-center\",\n      children: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInpu, {\n      fullWidth: ture,\n      label: \"ユーザー名\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: username,\n      type: \"text\",\n      onChange: inputUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: ture,\n      label: \"メールアドレス\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: email,\n      type: \"email\",\n      onChange: inputEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: ture,\n      label: \"パスワード\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: password,\n      type: \"password\",\n      onChange: inputPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: ture,\n      label: \"確認用パス\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: confirmPassword,\n      type: \"password\",\n      onChange: inputConfirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"N7pc5XXStMOtmWYfxDZiky3EJDk=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/templates/SignUp.js"],"names":["React","useCallback","useState","TextInput","SignUp","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","inputUsername","event","targe","value","inputEmail","inputPassword","inputConfirmPassword","ture"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport { TextInput } from '../components/Uikit';\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const [username, setUsername] = useState(\"\"),\r\n        [email, setEmail] = useState(\"\"),\r\n        [password, setPassword] = useState(\"\"),\r\n        [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const inputUsername = useCallback((event) => {\r\n    setUsername(event.targe.value)\r\n  }, [setUsername])\r\n\r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.targe.value)\r\n  }, [setEmail])\r\n\r\n  const inputPassword = useCallback((event) => {\r\n    setPassword(event.targe.value)\r\n  }, [setPassword])\r\n\r\n  const inputConfirmPassword = useCallback((event) => {\r\n    setConfirmPassword(event.targe.value)\r\n  }, [setConfirmPassword])\r\n\r\n  return (\r\n    <div className='c-section-container'>\r\n      <h2 className='u-text-headline u-text-center'>アカウント登録</h2>\r\n      <div className='module-spacer--medium' />\r\n      <TextInpu\r\n        fullWidth={ture} label={\"ユーザー名\"} multiline={false} required={true}\r\n        rows={1} value={username} type={\"text\"} onChange={inputUsername}\r\n      />\r\n      <TextInput\r\n        fullWidth={ture} label={\"メールアドレス\"} multiline={false} required={true}\r\n        rows={1} value={email} type={\"email\"} onChange={inputEmail}\r\n      />\r\n      <TextInput\r\n        fullWidth={ture} label={\"パスワード\"} multiline={false} required={true}\r\n        rows={1} value={password} type={\"password\"} onChange={inputPassword}\r\n      />\r\n      <TextInput\r\n        fullWidth={ture} label={\"確認用パス\"} multiline={false} required={true}\r\n        rows={1} value={confirmPassword} type={\"password\"} onChange={inputConfirmPassword}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}