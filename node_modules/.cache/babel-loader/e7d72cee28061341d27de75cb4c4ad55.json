{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\redux\\\\redux-app\\\\src\\\\templates\\\\Reset.js\",\n    _s = $RefreshSig$();\n\nimport { push } from 'connected-react-router';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryButton, TextInput } from '../components/Uikit';\nimport { resetPassword } from '../reducks/users/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const inputEmail = useCallback(event => {\n    setEmail(event.target.value);\n  }, [setEmail]);\n  const inputPassword = useCallback(event => {\n    setPassword(event.target.value);\n  }, [setPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text__headline u-text-center\",\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u30EA\\u30BB\\u30C3\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      fullWidth: true,\n      label: \"メールアドレス\",\n      multiline: false,\n      required: true,\n      rows: 1,\n      value: email,\n      type: \"email\",\n      onChange: inputEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n        label: \"Reset Password\",\n        onClick: () => dispatch(resetPassword(email))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        label: \"アカウント作成\",\n        onClick: () => dispatch(push('signup'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reset, \"UUcyiBKUDp2xDAuMuIBIp1gUP2Q=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/templates/Reset.js"],"names":["push","React","useCallback","useState","useDispatch","PrimaryButton","TextInput","resetPassword","Reset","dispatch","email","setEmail","inputEmail","event","target","value","inputPassword","setPassword"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,6BAA9B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,UAAU,GAAGV,WAAW,CAAEW,KAAD,IAAW;AACxCF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAF6B,EAE3B,CAACJ,QAAD,CAF2B,CAA9B;AAIA,QAAMK,aAAa,GAAGd,WAAW,CAAEW,KAAD,IAAW;AAC3CI,IAAAA,WAAW,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFgC,EAE9B,CAACE,WAAD,CAF8B,CAAjC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AACE,MAAA,SAAS,EAAE,IADb;AACmB,MAAA,KAAK,EAAE,SAD1B;AACqC,MAAA,SAAS,EAAE,KADhD;AACuD,MAAA,QAAQ,EAAE,IADjE;AAEE,MAAA,IAAI,EAAE,CAFR;AAEW,MAAA,KAAK,EAAEP,KAFlB;AAEyB,MAAA,IAAI,EAAE,OAF/B;AAEwC,MAAA,QAAQ,EAAEE;AAFlD;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,KAAK,EAAE,gBADT;AAEE,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAACF,aAAa,CAACG,KAAD,CAAd;AAFzB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AACE,QAAA,KAAK,EAAE,SADT;AAEE,QAAA,OAAO,EAAE,MAAMD,QAAQ,CAACT,IAAI,CAAC,QAAD,CAAL;AAFzB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlCD;;GAAMQ,K;UACaJ,W;;;KADbI,K;AAoCN,eAAeA,KAAf","sourcesContent":["import { push } from 'connected-react-router';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PrimaryButton, TextInput } from '../components/Uikit';\r\nimport { resetPassword } from '../reducks/users/operations';\r\n\r\nconst Reset = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.target.value)\r\n  }, [setEmail])\r\n\r\n  const inputPassword = useCallback((event) => {\r\n    setPassword(event.target.value)\r\n  }, [setPassword])\r\n\r\n  return (\r\n    <div className='c-section-container'>\r\n      <h2 className='u-text__headline u-text-center'>パスワードのリセット</h2>\r\n      <div className='module-spacer--medium' />\r\n      <TextInput\r\n        fullWidth={true} label={\"メールアドレス\"} multiline={false} required={true}\r\n        rows={1} value={email} type={\"email\"} onChange={inputEmail}\r\n      />\r\n      <div className='module-spacer--medium' />\r\n      <div className='center'>\r\n        <PrimaryButton\r\n          label={\"Reset Password\"}\r\n          onClick={() => dispatch(resetPassword(email))}\r\n        />\r\n        <PrimaryButton\r\n          label={\"アカウント作成\"}\r\n          onClick={() => dispatch(push('signup'))}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reset\r\n"]},"metadata":{},"sourceType":"module"}