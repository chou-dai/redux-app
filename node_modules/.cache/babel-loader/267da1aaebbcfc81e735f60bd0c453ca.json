{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSignedIn } from \"./reducks/users/selectors\";\nimport { listenAuthState } from \"./reducks/users/operations\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = ({\n  children\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const isSignedIn = getSignedIn(selector);\n  useEffect(() => {\n    if (!isSignedIn) {\n      dispatch(listenAuthState());\n    }\n  }, []);\n\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return children;\n  }\n};\n\n_s(Auth, \"I1e6xWLg+kqrhUy4QEVy0hYKLSU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/Auth.js"],"names":["React","useEffect","useDispatch","useSelector","getSignedIn","listenAuthState","Auth","children","dispatch","selector","state","isSignedIn"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA5B;AAEA,QAAMC,UAAU,GAAGP,WAAW,CAACK,QAAD,CAA9B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,UAAL,EAAiB;AACfH,MAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAI,CAACM,UAAL,EAAiB;AACf,wBAAO,qCAAP;AACD,GAFD,MAEO;AACL,WAAOJ,QAAP;AACD;AACF,CAjBD;;GAAMD,I;UACaJ,W,EACAC,W;;;KAFbG,I;AAmBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSignedIn} from \"./reducks/users/selectors\";\r\nimport {listenAuthState} from \"./reducks/users/operations\";\r\n\r\nconst Auth = ({children}) => {\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n\r\n  const isSignedIn = getSignedIn(selector)\r\n\r\n  useEffect(() => {\r\n    if (!isSignedIn) {\r\n      dispatch(listenAuthState())\r\n    }\r\n  }, []);\r\n\r\n  if (!isSignedIn) {\r\n    return <></>\r\n  } else {\r\n    return children\r\n  }\r\n};\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}