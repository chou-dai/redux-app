{"ast":null,"code":"import { push } from \"connected-react-router\";\nimport { signInAction } from \"./actions\";\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\";\nexport const signIn = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n\n    if (!isSignedIn) {\n      const username = \"Choushi Daiki\";\n      const uid = \"71480293\";\n      dispatch(signInAction({\n        isSignedIn: true,\n        uid: uid,\n        username: username\n      }));\n      dispatch(push('/'));\n    }\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert('必須項目が未入力です。');\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert('パスワードが一致しません。もう1度お試しください。');\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const timestamp = FirebaseTimestamp.now();\n        const userInitialData = {\n          created_at: timestamp,\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          update_at: timestamp,\n          username: username\n        };\n        db.collection('users').doc(uid).set(userInitialData).then(() => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/reducks/users/operations.js"],"names":["push","signInAction","auth","db","FirebaseTimestamp","signIn","dispatch","getState","state","isSignedIn","users","username","uid","signUp","email","password","confirmPassword","alert","createUserWithEmailAndPassword","then","result","user","timestamp","now","userInitialData","created_at","role","update_at","collection","doc","set"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,iBAAnB,QAA4C,sBAA5C;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAO,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AAClC,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYD,UAA/B;;AAEA,QAAG,CAACA,UAAJ,EAAgB;AACd,YAAME,QAAQ,GAAG,eAAjB;AACA,YAAMC,GAAG,GAAG,UAAZ;AAEAN,MAAAA,QAAQ,CAACL,YAAY,CAAC;AACpBQ,QAAAA,UAAU,EAAE,IADQ;AAEpBG,QAAAA,GAAG,EAAEA,GAFe;AAGpBD,QAAAA,QAAQ,EAAEA;AAHU,OAAD,CAAb,CAAR;AAKAL,MAAAA,QAAQ,CAACN,IAAI,CAAC,GAAD,CAAL,CAAR;AACD;AACF,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMa,MAAM,GAAG,CAACF,QAAD,EAAWG,KAAX,EAAkBC,QAAlB,EAA4BC,eAA5B,KAAgD;AACpE,SAAO,MAAMV,QAAN,IAAmB;AAExB,QAAGK,QAAQ,KAAK,EAAb,IAAmBG,KAAK,KAAK,EAA7B,IAAmCC,QAAQ,KAAK,EAAhD,IAAsDC,eAAe,KAAK,EAA7E,EAAiF;AAC/EC,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,QAAIF,QAAQ,KAAKC,eAAjB,EAAkC;AAChCC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,WAAOf,IAAI,CAACgB,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,EACJI,IADI,CACCC,MAAM,IAAI;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,UAAGA,IAAH,EAAS;AACP,cAAMT,GAAG,GAAGS,IAAI,CAACT,GAAjB;AACA,cAAMU,SAAS,GAAGlB,iBAAiB,CAACmB,GAAlB,EAAlB;AAEA,cAAMC,eAAe,GAAG;AACtBC,UAAAA,UAAU,EAAEH,SADU;AAEtBR,UAAAA,KAAK,EAAEA,KAFe;AAGtBY,UAAAA,IAAI,EAAE,UAHgB;AAItBd,UAAAA,GAAG,EAAEA,GAJiB;AAKtBe,UAAAA,SAAS,EAAEL,SALW;AAMtBX,UAAAA,QAAQ,EAAEA;AANY,SAAxB;AASAR,QAAAA,EAAE,CAACyB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BjB,GAA3B,EAAgCkB,GAAhC,CAAoCN,eAApC,EACGL,IADH,CACQ,MAAM;AACVb,UAAAA,QAAQ,CAACN,IAAI,CAAC,GAAD,CAAL,CAAR;AACD,SAHH;AAID;AACF,KAtBI,CAAP;AAuBD,GAlCD;AAmCD,CApCM","sourcesContent":["import { push } from \"connected-react-router\";\r\nimport { signInAction } from \"./actions\";\r\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\"\r\n\r\nexport const signIn = () => {\r\n  return async(dispatch, getState) => {\r\n    const state = getState()\r\n    const isSignedIn = state.users.isSignedIn\r\n\r\n    if(!isSignedIn) {\r\n      const username = \"Choushi Daiki\"\r\n      const uid = \"71480293\"\r\n\r\n      dispatch(signInAction({\r\n        isSignedIn: true,\r\n        uid: uid,\r\n        username: username\r\n      }))\r\n      dispatch(push('/'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const signUp = (username, email, password, confirmPassword) => {\r\n  return async(dispatch) => {\r\n\r\n    if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert('必須項目が未入力です。');\r\n      return false\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert('パスワードが一致しません。もう1度お試しください。')\r\n      return false\r\n    }\r\n\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        const user = result.user\r\n\r\n        if(user) {\r\n          const uid = user.uid\r\n          const timestamp = FirebaseTimestamp.now()\r\n\r\n          const userInitialData = {\r\n            created_at: timestamp,\r\n            email: email,\r\n            role: \"customer\",\r\n            uid: uid,\r\n            update_at: timestamp,\r\n            username: username\r\n          }\r\n\r\n          db.collection('users').doc(uid).set(userInitialData)\r\n            .then(() => {\r\n              dispatch(push('/'))\r\n            })\r\n        }\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}