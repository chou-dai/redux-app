{"ast":null,"code":"import { push } from \"connected-react-router\";\nimport { signInAction } from \"./actions\";\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\";\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert('必須項目が未入力です。');\n      return false;\n    }\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert('必須項目が未入力です。');\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert('パスワードが一致しません。もう1度お試しください。');\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const timestamp = FirebaseTimestamp.now();\n        const userInitialData = {\n          created_at: timestamp,\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          update_at: timestamp,\n          username: username\n        };\n        db.collection('users').doc(uid).set(userInitialData).then(() => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/redux/redux-app/src/reducks/users/operations.js"],"names":["push","signInAction","auth","db","FirebaseTimestamp","signIn","email","password","dispatch","alert","signUp","username","confirmPassword","createUserWithEmailAndPassword","then","result","user","uid","timestamp","now","userInitialData","created_at","role","update_at","collection","doc","set"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,iBAAnB,QAA4C,sBAA5C;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO,MAAMC,QAAN,IAAmB;AACxB,QAAGF,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAhC,EAAoC;AAClCE,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA,aAAO,KAAP;AACD;AACF,GALD;AAMD,CAPM;AASP,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWL,KAAX,EAAkBC,QAAlB,EAA4BK,eAA5B,KAAgD;AACpE,SAAO,MAAMJ,QAAN,IAAmB;AACxB,QAAGG,QAAQ,KAAK,EAAb,IAAmBL,KAAK,KAAK,EAA7B,IAAmCC,QAAQ,KAAK,EAAhD,IAAsDK,eAAe,KAAK,EAA7E,EAAiF;AAC/EH,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,QAAIF,QAAQ,KAAKK,eAAjB,EAAkC;AAChCH,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,WAAOP,IAAI,CAACW,8BAAL,CAAoCP,KAApC,EAA2CC,QAA3C,EACJO,IADI,CACCC,MAAM,IAAI;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,UAAGA,IAAH,EAAS;AACP,cAAMC,GAAG,GAAGD,IAAI,CAACC,GAAjB;AACA,cAAMC,SAAS,GAAGd,iBAAiB,CAACe,GAAlB,EAAlB;AAEA,cAAMC,eAAe,GAAG;AACtBC,UAAAA,UAAU,EAAEH,SADU;AAEtBZ,UAAAA,KAAK,EAAEA,KAFe;AAGtBgB,UAAAA,IAAI,EAAE,UAHgB;AAItBL,UAAAA,GAAG,EAAEA,GAJiB;AAKtBM,UAAAA,SAAS,EAAEL,SALW;AAMtBP,UAAAA,QAAQ,EAAEA;AANY,SAAxB;AASAR,QAAAA,EAAE,CAACqB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BR,GAA3B,EAAgCS,GAAhC,CAAoCN,eAApC,EACGN,IADH,CACQ,MAAM;AACVN,UAAAA,QAAQ,CAACR,IAAI,CAAC,GAAD,CAAL,CAAR;AACD,SAHH;AAID;AACF,KAtBI,CAAP;AAuBD,GAjCD;AAkCD,CAnCM","sourcesContent":["import { push } from \"connected-react-router\";\r\nimport { signInAction } from \"./actions\";\r\nimport { auth, db, FirebaseTimestamp } from \"../../firebase/index\"\r\n\r\nexport const signIn = (email, password) => {\r\n  return async(dispatch) => {\r\n    if(email === \"\" || password === \"\") {\r\n      alert('必須項目が未入力です。');\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nexport const signUp = (username, email, password, confirmPassword) => {\r\n  return async(dispatch) => {\r\n    if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert('必須項目が未入力です。');\r\n      return false\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert('パスワードが一致しません。もう1度お試しください。')\r\n      return false\r\n    }\r\n\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        const user = result.user;\r\n\r\n        if(user) {\r\n          const uid = user.uid;\r\n          const timestamp = FirebaseTimestamp.now();\r\n\r\n          const userInitialData = {\r\n            created_at: timestamp,\r\n            email: email,\r\n            role: \"customer\",\r\n            uid: uid,\r\n            update_at: timestamp,\r\n            username: username\r\n          };\r\n\r\n          db.collection('users').doc(uid).set(userInitialData)\r\n            .then(() => {\r\n              dispatch(push('/'))\r\n            })\r\n        }\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}